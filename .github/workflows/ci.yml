name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-backend:
    name: Test Backend (push)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Prepare env
        run: |
          cp .env.example .env || true
          echo "PORT=3001" >> .env
          echo "FRONTEND_URL=http://localhost:3000" >> .env

      - name: Build (if applicable)
        run: npm run build --if-present

      - name: Start backend
        run: |
          npm run start &
          npx wait-on tcp:3001

      - name: Health check
        run: |
          (curl -fsS http://localhost:3001/api/health || curl -fsS http://localhost:3001/health || curl -fsS http://localhost:3001/\) >/dev/null

  test-frontend:
    name: Test Frontend (push)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    needs: [test-backend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start preview server
        run: |
          npm run preview -- --port 3000 &
          npx wait-on http://localhost:3000

      - name: Smoke test UI
        run: curl -fsS http://localhost:3000 >/dev/null

  security-scan:
    name: Security Scan (push)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm audit (non-blocking)
        run: npm audit --audit-level=high || true

  # Enable after adding secrets: RAILWAY_TOKEN, VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID
  deploy-backend:
    name: Deploy Backend to Railway (push)
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: railwayapp/action@v2
        with:
          service: chess-v4-backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend to Vercel (push)
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          prod: true
