name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend linting
        working-directory: ./backend
        run: npm run lint || echo "Linting not configured"

      - name: Run backend tests
        working-directory: ./backend
        run: npm test || echo "Tests not configured"

      - name: Check backend health endpoint
        working-directory: ./backend
        run: |
          npm start &
          sleep 10
          curl -f http://localhost:3001/api/health || exit 1
          kill %1

  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  deploy-backend:
    needs: [test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Deploy Backend to Railway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: railwayapp/cli@v3
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          command: up --service backend

  deploy-frontend:
    needs: [test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Deploy Frontend to Vercel

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

  notify:
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    name: Deployment Notification

    steps:
      - name: Notify deployment status
        run: |
          if [[ "${{ needs.deploy-backend.result }}" == "success" && "${{ needs.deploy-frontend.result }}" == "success" ]]; then
            echo "✅ Chess v4 deployed successfully!"
            echo "Backend: Railway deployment completed"
            echo "Frontend: Vercel deployment completed"
          else
            echo "❌ Chess v4 deployment failed"
            echo "Backend status: ${{ needs.deploy-backend.result }}"
            echo "Frontend status: ${{ needs.deploy-frontend.result }}"
          fi